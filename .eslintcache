[{"/Users/james/Code/todo-practice/src/index.js":"1","/Users/james/Code/todo-practice/src/App.js":"2","/Users/james/Code/todo-practice/src/reportWebVitals.js":"3","/Users/james/Code/todo-practice/src/store.js":"4","/Users/james/Code/todo-practice/src/Todo.js":"5"},{"size":500,"mtime":1612268224552,"results":"6","hashOfConfig":"7"},{"size":1690,"mtime":1612276788176,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612268224553,"results":"9","hashOfConfig":"7"},{"size":247,"mtime":1612268477542,"results":"10","hashOfConfig":"7"},{"size":461,"mtime":1612276742813,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1t0ly27",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/james/Code/todo-practice/src/index.js",[],["25","26"],"/Users/james/Code/todo-practice/src/App.js",["27"],"import React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\nimport './App.css';\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([\n    {\n      title: 'buy groceries',\n      completed: false\n    },\n    {\n      title: 'feed dog',\n      completed: false\n    },\n    {\n      title: 'laundry',\n      completed: false\n    }\n  ])\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  const handleDelete = i => {\n    const newTodoList = [...todoList];\n    newTodoList.splice(i, 1);\n    setTodoList(newTodoList);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newList = [...todoList, {title: newTodo, complete: false}];\n    setTodoList(newList);\n    document.querySelector(\"#add-todo\").value=\"\"\n  }\n\n  const handleChange = e => {\n    e.preventDefault();\n    setNewTodo(e.target.value);\n  }\n\n  const handleComplete = (i) => {\n    const newTodos = [...todoList];\n    todoList[i].completed = !todoList[i].completed;\n    setTodoList(newTodos)\n  }\n\n\n  return (\n    <main>\n      <header>\n       <h1>Shit I Gotta Do</h1>\n      </header>\n\n      <section>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"add-todo\">New Shit:</label>\n          <input id=\"add-todo\" className=\"add-todo-input\" type=\"text\" required onChange={handleChange}/>\n          <input type=\"submit\" className=\"add-btn\" value=\"Add\" />\n        </form>\n      </section>\n\n      <div>\n          {todoList.map((todo, i) => (\n            <Todo \n              key={i}\n              index={i}\n              todo={todo}\n              deleteTodo={handleDelete}\n              completeTodo={handleComplete}\n            />\n          ))}\n      </div>\n    </main>\n  )\n}\n\nexport default App;","/Users/james/Code/todo-practice/src/reportWebVitals.js",[],"/Users/james/Code/todo-practice/src/store.js",[],"/Users/james/Code/todo-practice/src/Todo.js",["28","29"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction Todo({todo, index, deleteTodo, completeTodo}) {\n  return (\n    <div className=\"todo\" style={{textDecoration: todo.completed ? \"line-through\" : \"\"}}>\n      {todo.title}\n      <input className=\"check-box\" type=\"checkbox\" onClick={()=>completeTodo(index)}/>\n      <button className=\"delete-btn\" onClick={()=>deleteTodo(index)}>Delete</button>\n    </div>\n  )\n}\n\nexport default Todo;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},{"ruleId":"34","severity":1,"message":"38","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},{"ruleId":"34","severity":1,"message":"35","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]